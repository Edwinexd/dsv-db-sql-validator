import React from 'react';
import Editor from 'react-simple-code-editor';
import { format } from 'sql-formatter';
// @ts-ignore
import { highlight, languages } from 'prismjs/components/prism-core';
import { Result } from './utils';
import ResultTable from './ResultTable';
import { Question } from './QuestionSelector';

interface ExportViewProps {
    question: Question;
    isCorrect: boolean;
    code: string;
    result: Result;
}

const ExportView = React.forwardRef<HTMLDivElement, ExportViewProps>(({ isCorrect, question, code, result }, ref) => {
    return (
        // intentionally fixed width since we render a png of it
        <div style={{ backgroundColor: "#efefef", color: "#313131" }} className="flex flex-col items-center p-16 w-[64rem]" ref={ref}>
            <div className="flex my-3 text-xl font-semibold space-x-4">
                <span className="text-gray-700">Question:</span>
                <span className="bg-blue-100 text-blue-800 px-2 py-1 rounded">{question.category.display_number}</span>
                <span className="text-gray-700">Variant:</span>
                <span className="bg-blue-100 text-blue-800 px-2 py-1 rounded">{question.display_sequence}</span>
            </div>
            <h2 className="text-3xl font-semibold">{question.description}</h2>
            {/* code for the view */}
            {/* <h2 className="text-3xl font-semibold">Query for {queryedView}</h2> */}
            <p className="break-words max-w-4xl mb-4 font-semibold text-left text-xl p-2 italic">This is the code for {question.category.display_number}{question.display_sequence}:</p>
            <Editor
                readOnly={true}
                value={format(
                    code, {
                    language: 'sqlite',
                    tabWidth: 2,
                    useTabs: false,
                    keywordCase: 'upper',
                    dataTypeCase: 'upper',
                    functionCase: 'upper',
                })}
                onValueChange={() => null}
                highlight={code => highlight(code, languages.sql)}
                padding={10}
                tabSize={4}
                className="font-mono text-xl w-full bg-slate-200 border-2 max-w-4xl min-h-40 border-none my-2"
            />
            <p className="break-words max-w-4xl mb-4 font-semibold text-left text-xl p-2 italic">... and this is the result of executing the query:</p>
            <div className="max-w-full">
                <ResultTable result={result} forceLight={true} />
            </div>
            {/* This result (green and bold) matches, SQL Validator timestamp  */}
            <p className="break-words max-w-4xl mb-4 font-semibold text-left text-xl p-2 italic">... which <span className={isCorrect ? 'text-green-600' : 'text-red-500'}>{isCorrect ? 'matches' : 'does not match'}</span> the expected result!</p>
            <p className="text-xl font-semibold mt-4">Generated by DB SQL Validator at {new Date().toISOString()}</p>
        </div>
    )
});

export default ExportView;
